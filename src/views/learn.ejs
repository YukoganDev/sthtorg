<!DOCTYPE html>
<html lang="en" class="h-100">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
      crossorigin="anonymous" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <!-- JS -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
      crossorigin="anonymous"
      defer></script>
    <script src="js/index.js" defer></script>
    <title>Document</title>
    <!-- Added Stylesheets -->
    <link rel="stylesheet" href="./css/index.css" />
    <link rel="stylesheet" href="./css/learn.css" />
  </head>

  <body class="d-flex h-100 text-center text-bg-warning">
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="mb-auto">
        <div>
          <h3 class="float-md-start mb-0">Stht.org</h3>
          <nav class="nav nav-masthead justify-content-center float-md-end">
            <a class="nav-link fw-bold py-1 px-0" aria-current="page" href="/"
              >Home</a
            >
            <a class="nav-link fw-bold py-1 px-0 active" href="learn"
              >Learn<sub class="text-muted">BÃ¨ta</sub></a
            >
            <a class="nav-link fw-bold py-1 px-0" href="/login" id="login-btn"
              >Loading...</a
            >
          </nav>
        </div>
      </header>

      <main class="px-3">
        <div class="info-div">
          <h1>Stht Learn</h1>
          <br />
          <p class="lead">The most efficient studying platform by Stht.org</p>
          <p class="lead">
            <br />
            <button
              id="start-btn"
              class="btn btn-lg btn-secondary fw-bold border-white bg-white">
              Load 'My Gallery'
            </button>
          </p>
        </div>
        <div class="learn-div" hidden>
          <div id="wrapper">
            <div class="" id="terms" hidden>
              <a
                href="#"
                type="button"
                id="create-term-btn"
                class="btn btn-sm btn-outline-success">
                <span class="material-symbols-outlined create-term-btn">
                  add
                </span>
                Add term
              </a>
              <div class="wrap list-group w-auto terms"></div>
            </div>
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3 cards">
              <div class="col">
                <div class="card shadow-sm bg-light">
                  <div class="card-body align-items-center">
                    <p class="card-text">New card</p>
                    <div class="justify-content-between align-items-center">
                      <div class="btn-group align-self-end">
                        <button
                          type="button"
                          class="btn btn-sm btn-outline-success create-btn">
                          Create
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>

      <footer class="mt-auto text-white-50">
        <p>&copy; Stht Studios 2022</p>
      </footer>
    </div>

    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script defer>
      const socket = io();

      const loginBtn = document.querySelector('#login-btn');
      let user = '<%=user%>';
      console.log(`Logged in as ${user}`);
      if (user) {
        loginBtn.innerHTML = `Logout (${user})`;
        loginBtn.href = '/logout';
      } else {
        loginBtn.innerHTML = `Login`;
      }

      document.getElementById('start-btn').onclick = () => {
        document.querySelector('#start-btn').innerHTML =
          '<span class="material-symbols-outlined"> cached </span>';
        setTimeout(() => {
          document.querySelector('.info-div').hidden = true;
          document.querySelector('.learn-div').hidden = false;
        }, 500);
      };

      document.querySelector('.create-btn').onclick = () => {
        createCard({
          name: 'Name this card...',
          nameEditable: true,
          buttonName: 'Cancel',
          extraButtonName: 'Save',
          buttonType: 'danger',
          extraButtonType: 'success',
          space: true,
          buttonActions: (id) => {
            document.getElementById(id).remove();
          },
          extraButtonActions: (id) => {
            console.log(
              document.getElementById(id).querySelector('.card-text').innerText
            );
            sendPkt('saveCard', {
              name: document.getElementById(id).querySelector('.card-text')
                .innerText,
            });
            document.getElementById(id).remove();
          },
        });
      };

      function cancel(el, id) {
        if (id) {
          document.getElementById(id).remove();
          return;
        }
        el.remove();
      }

      function sendPkt(eventName, pkt) {
        socket.emit(eventName, pkt);
      }

      function edit(el) {
        console.log(el);
        if (el.contentEditable) {
          el.contentEditable = true;
        }
        el.onkeypress = (event) => {
          if (event.key === 'Enter') {
            event.preventDefault();
            el.contentEditable = false;
          }
        };
      }

      function removeEl(el) {
        el.parentNode.parentNode.parentNode.remove(el.parentNode.parentNode);
      }

      function generateId(length) {
        var result = '';
        var characters =
          'A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z';
        var charactersLength = characters.length;
        for (var i = 0; i < length; i++) {
          result += characters.charAt(
            Math.floor(Math.random() * charactersLength)
          );
        }
        return result;
      }

      function createCard({
        name,
        buttonName = 'Learn',
        extraButtonName = 'Edit',
        buttonType = 'secondary',
        extraButtonType = 'secondary',
        space = false,
        nameEditable = false,
        buttonActions = null,
        extraButtonActions = null,
        card = null,
      }) {
        let btnGroup = 'btn-group';
        if (space) {
          btnGroup = '';
        }
        let extraNameProps = '';
        if (nameEditable) {
          extraNameProps =
            'contentEditable = "true" style="background-color: #292d31;"';
        }
        console.log(card);
        let id = generateId(10);

        let buttonAction = ``;
        if (buttonActions) {
          buttonAction = `(${buttonActions})('${id}');`;
        } else {
          buttonAction = `learn(${card.id});`;
        }
        let extraButtonAction = ``;
        if (extraButtonActions) {
          extraButtonAction = `(${extraButtonActions})('${id}');`;
        } else {
          extraButtonAction = `edit(${card.id});`;
        }

        console.log(id);
        let el = `
        <div class="col" id="${id}">
                <div class="card shadow-sm bg-light">
                  <div class="card-body align-items-center">
                    <p class="card-text ${id}" ${extraNameProps}>
                      ${name}
                    </p>
                    <div
                      class="justify-content-between align-items-center"
                    >
                      <div class="${btnGroup} align-self-end">
                        <button
                          type="button"
                          onclick="${buttonAction}"
                          class="btn btn-sm btn-outline-${buttonType}"
                        >
                          ${buttonName}
                        </button>
                        <button
                          type="button"
                          onclick="${extraButtonAction}"
                          class="btn btn-sm btn-outline-${extraButtonType}"
                        >
                          ${extraButtonName}
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
          `;
        document.querySelector('.cards').insertAdjacentHTML('beforeend', el);

        if (nameEditable) {
          let node = document.querySelector(`.${id.toString()}`);
          node.focus();
          selectText(node);
        }
      }

      socket.on('loadCard', ({ card }) => {
        createCard({ name: card.name, card });
      });

      function edit(cardId) {
        console.log('edit');
        socket.emit('requestTerms', { cardId });
        document.querySelector('#terms').hidden = false;
        document.querySelector('.cards').hidden = true;
      }

      function learn(cardId) {
        console.log('learn');
        // socket.emit('requestTerms', { cardId: card.id });
        // document.querySelector('#terms').hidden = false;
        // document.querySelector('.cards').hidden = true;
      }

      socket.on('loadTerm', ({ term }) => {
        createTerm(term.term, term.definition);
      });

      function selectText(node) {
        if (document.body.createTextRange) {
          const range = document.body.createTextRange();
          range.moveToElementText(node);
          range.select();
        } else if (window.getSelection) {
          const selection = window.getSelection();
          const range = document.createRange();
          range.selectNodeContents(node);
          selection.removeAllRanges();
          selection.addRange(range);
        } else {
          console.warn('Could not select text: Unsupported browser');
        }
      }

      document.querySelector('#create-term-btn').onclick = () => {
        createTerm('test', '123');
      };

      function createTerm(term, definition) {
        let el = `
        <a
              href="#"
              class="list-group-item list-group-item-action d-flex gap-3 py-3 item"
              aria-current="true"
            >
              <div class="d-flex gap-2 w-100 justify-content-between" onclick="edit(this);">
                <div>
                  <h6 class="mb-0 term"">${term}</h6>
                  <p class="mb-0 opacity-75">
                    ${definition}
                  </p>
                </div>
                <button class="delete-btn">
                  <span class="material-symbols-outlined delete" onclick="removeEl(this);"> delete </span>
                </button>
              </div>
            </a>
        `;
        document.querySelector('.terms').insertAdjacentHTML('beforeend', el);
      }
    </script>
  </body>
</html>
